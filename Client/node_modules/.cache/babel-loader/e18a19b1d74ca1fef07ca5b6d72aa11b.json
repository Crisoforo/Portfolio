{"ast":null,"code":"var _jsxFileName = \"/Users/alejandro/Desktop/GitHub.noindex/Porfolio/Portfolio/Client/src/component/Pages/Profile.js\";\nimport React from \"react\";\nimport { Row, Col, Input, Modal, Button, Icon } from \"react-materialize\";\nimport axios from \"axios\";\n\nclass Profile extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      about_me: \"\",\n      entry: \"\"\n    };\n\n    this.getEntry = journalId => {\n      axios.get(\"/entry/\".concat(journalId)).then(res => {\n        console.log(res.data.entries);\n\n        if (res) {\n          this.setState({\n            entry: res.data.entries[res.data.entries.length - 1]\n          });\n        }\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.handleselectedFile = () => {\n      let formData = new FormData();\n      let imagefile = document.querySelector('#profileImg');\n      formData.append(\"image\", imagefile.files[0]);\n      console.log(formData);\n      axios.post('/upload/' + this.props.user._id, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      }).then(res => {\n        this.props.setUser(res.data);\n      });\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        about_me: event.target.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      axios.post(\"aboutme/\".concat(this.props.user._id), {\n        about_me: this.state.about_me\n      }).then(res => {\n        console.log(res.data);\n        this.props.setUser(res.data);\n      });\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.user._id === undefined && nextProps.user.journals) {\n      this.getEntry(nextProps.user.journals);\n    }\n  }\n\n  render() {\n    let profile;\n\n    if (this.props.user.file !== undefined) {\n      let src = \"/upload/\".concat(this.props.user.file);\n      profile = React.createElement(\"img\", {\n        src: src,\n        alt: \"profile\",\n        style: {\n          width: \"346px\",\n          height: \"346px\",\n          objectFit: \"cover\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      });\n    }\n\n    let about_me;\n\n    if (this.props.user.about_me) {\n      about_me = React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, this.props.user.about_me);\n    }\n\n    let entry;\n\n    if (this.state.entry) {\n      entry = React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Col, {\n        s: 2,\n        className: \"grid-example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }), React.createElement(Col, {\n        s: 4,\n        className: \"grid-example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, this.state.entry.title), React.createElement(\"hr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, this.state.entry.body), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, \"location_on\"), this.state.entry.location)), React.createElement(Col, {\n        s: 1,\n        className: \"grid-example\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }));\n    }\n\n    let entry_pic;\n\n    if (this.state.entry.file) {\n      entry_pic = React.createElement(Col, {\n        s: 4,\n        className: \"journal_pics\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"fit_img tile\",\n        src: \"upload/\".concat(this.state.entry.file),\n        alt: \"tripper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(Row, {\n      className: \"FriendProfile\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(Col, {\n      s: 2,\n      className: \"grid-example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }), React.createElement(Col, {\n      s: 5,\n      className: \"grid-example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, profile, React.createElement(Modal, {\n      trigger: React.createElement(Button, {\n        className: \"homeBtn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"Add Profile\"),\n      actions: React.createElement(React.Fragment, null, React.createElement(Button, {\n        className: \"cancel modal-action modal-close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        id: \"signUpSubmit\",\n        className: \"cancel modal-action modal-close\",\n        onClick: this.handleselectedFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"Submit\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(Row, {\n      id: \"signUpForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Input, {\n      name: \"profileImg\",\n      type: \"file\",\n      id: \"profileImg\",\n      label: \"Upload\",\n      placeholder: \"Choose File\",\n      s: 12,\n      readOnly: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }))), entry), React.createElement(Col, {\n      s: 3,\n      className: \"grid-example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"textBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.props.user.firstName, \" \", this.props.user.lastName), about_me, React.createElement(Modal, {\n      header: \"Add your story!\",\n      trigger: React.createElement(Button, {\n        className: \"homeBtn pulse\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"edit\")),\n      actions: React.createElement(React.Fragment, null, React.createElement(Button, {\n        className: \"cancel modal-action modal-close\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(Button, {\n        id: \"signUpSubmit\",\n        className: \"cancel modal-action modal-close\",\n        onClick: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Submit\")),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, React.createElement(Row, {\n      id: \"addNewEntryForm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(Input, {\n      type: \"textarea\",\n      id: \"entryTitle\",\n      label: \"About me..\",\n      value: this.state.about_me,\n      onChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    })))), entry_pic), React.createElement(Col, {\n      s: 3,\n      className: \"grid-example\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default Profile;","map":{"version":3,"sources":["/Users/alejandro/Desktop/GitHub.noindex/Porfolio/Portfolio/Client/src/component/Pages/Profile.js"],"names":["React","Row","Col","Input","Modal","Button","Icon","axios","Profile","Component","state","about_me","entry","getEntry","journalId","get","then","res","console","log","data","entries","setState","length","catch","err","handleselectedFile","formData","FormData","imagefile","document","querySelector","append","files","post","props","user","_id","headers","setUser","handleInputChange","event","target","value","handleSubmit","componentWillReceiveProps","nextProps","undefined","journals","render","profile","file","src","width","height","objectFit","title","body","location","entry_pic","firstName","lastName"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Row, Col, Input, Modal, Button,Icon } from \"react-materialize\";\nimport axios from \"axios\";\n\nclass Profile extends React.Component {\n    state = {\n        about_me : \"\",\n        entry : \"\"\n    };\n\n    componentWillReceiveProps(nextProps) {\n        if ( this.props.user._id === undefined && nextProps.user.journals) {\n            this.getEntry(nextProps.user.journals);\n        }\n    }\n\n    getEntry = (journalId) => {\n        axios.get(`/entry/${journalId}`)\n        .then( res => {\n            console.log(res.data.entries)\n            if ( res ) {\n                this.setState({\n                    entry : res.data.entries[res.data.entries.length-1]\n                })\n            }\n        })\n        .catch( err => {\n            console.log(err);\n        }) \n    }\n\n    handleselectedFile = () => {\n        let formData = new FormData();\n        let imagefile = document.querySelector('#profileImg');\n        formData.append(\"image\", imagefile.files[0]);\n        console.log(formData)\n        axios.post('/upload/' + this.props.user._id, formData, {\n            headers: {\n                'Content-Type': 'multipart/form-data'\n            }\n        })\n        .then( (res) => {\n            this.props.setUser(res.data)\n        });\n    }\n\n    handleInputChange = event => {\n        this.setState({\n            about_me : event.target.value\n        });\n    };\n\n    handleSubmit = () => {\n        axios.post(`aboutme/${this.props.user._id}`\n        ,{\n            about_me : this.state.about_me\n        })\n        .then( res => {\n            console.log(res.data)\n            this.props.setUser(res.data)\n        });\n    }\n\n    render() {\n        let profile;\n        if (this.props.user.file !== undefined) {\n            let src = `/upload/${this.props.user.file}`\n           profile =  <img src={src} alt=\"profile\" style={{width: \"346px\", height: \"346px\", objectFit: \"cover\"}} />\n        }\n        \n        let about_me;\n        if (this.props.user.about_me) {\n            about_me = <p>{this.props.user.about_me}</p>\n        }\n\n        let entry;\n        if (this.state.entry) {\n            entry = <Row>\n                    <Col s={2} className='grid-example'></Col>\n                    <Col s={4} className='grid-example'>\n                        <h2>{this.state.entry.title}</h2>\n                        <hr />\n                        <h5>{this.state.entry.body}</h5>\n                        <p><Icon>location_on</Icon>{this.state.entry.location}</p>\n                    </Col>\n                    <Col s={1} className='grid-example'></Col>\n                    \n                    </Row>\n        }\n        let entry_pic;\n        if (this.state.entry.file) {\n            entry_pic = <Col s={4} className='journal_pics'>\n                        <img className=\"fit_img tile\" src={`upload/${this.state.entry.file}`} alt=\"tripper\" />\n                        </Col>\n                        \n        }\n\n        return (\n            <div>\n                <Row className=\"FriendProfile\">\n                    <Col s={2} className='grid-example'></Col>\n                    <Col s={5} className='grid-example'>\n                        {profile}\n                        <Modal\n                        trigger={<Button className=\"homeBtn\">Add Profile</Button>}\n                        actions={<><Button className=\"cancel modal-action modal-close\">Cancel</Button><Button id=\"signUpSubmit\" className=\"cancel modal-action modal-close\" onClick={this.handleselectedFile}>Submit</Button></>}\n                        >\n                        <Row id=\"signUpForm\">\n                            <Input name=\"profileImg\" type=\"file\" id=\"profileImg\" label=\"Upload\" placeholder=\"Choose File\" s={12} readOnly />\n                        </Row>\n                        </Modal>\n                        {entry}\n                    </Col>\n\n\n                    <Col s={3} className='grid-example'>\n                        <div className=\"textBox\">\n                            <h2>{this.props.user.firstName} {this.props.user.lastName}</h2>\n                            {about_me}\n                            <Modal\n                            header='Add your story!'\n                            trigger={<Button className=\"homeBtn pulse\"><Icon>edit</Icon></Button>}\n                            actions={<><Button className=\"cancel modal-action modal-close\">Cancel</Button><Button id=\"signUpSubmit\" className=\"cancel modal-action modal-close\" onClick={this.handleSubmit}>Submit</Button></>}\n                            > \n                            <Row id=\"addNewEntryForm\">\n                                <Input type='textarea' id=\"entryTitle\" label=\"About me..\" value={this.state.about_me} onChange={this.handleInputChange} />\n                            </Row>\n                            </Modal>\n                        </div>\n                        {entry_pic}\n                    </Col>\n                    <Col s={3} className=\"grid-example\"></Col>\n                </Row>\n\n\n            </div>\n        );\n    }\n}\n\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}